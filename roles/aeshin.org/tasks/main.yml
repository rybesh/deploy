---
- name: Install apt packages
  apt:
    name:
      "{{ system_packages }}"
    state: present

- name: Create directory for app
  file:
    path: "{{ install_root }}"
    state: directory

- name: Create directory for www files
  file:
    path: "{{ www_root }}"
    state: directory
    group: www-data

- name: Create directory for activities
  file:
    path: "{{ www_root }}/activities"
    state: directory
    group: www-data

- name: Clone/pull activity repos
  git:
    repo: "{{ item.value }}"
    dest: "{{ www_root }}/activities/{{ item.key }}"
  with_dict: "{{ activities }}"

- name: Clone/pull project repo
  git:
    repo: "{{ project_repo }}"
    dest: "{{ install_root }}"
  notify:
  - Restart uwsgi app service

- name: Install python packages
  pip:
    requirements: "{{ install_root }}/requirements.txt"
    virtualenv: "{{ install_root }}/venv"
    virtualenv_command: "{{ python3_executable }} -m venv"
  notify:
  - Restart uwsgi app service

- name: Copy secrets file
  copy:
    src: files/secrets.py
    dest: "{{ install_root }}/{{ project_name }}/secrets.py"
  notify:
  - Restart uwsgi app service

- name: Update database schema
  django_manage:
    command: migrate
    app_path: "{{ install_root }}"
    virtualenv: "{{ install_root }}/venv"

- name: Collect static files
  django_manage:
    command: collectstatic
    app_path: "{{ install_root }}"
    virtualenv: "{{ install_root }}/venv"

- name: Install uwsgi app socket
  template:
    src: templates/uwsgi-app.socket.j2
    dest: "/etc/systemd/system/{{ server_name }}.socket"
  register: installed_socket
  notify:
  - Restart uwsgi app socket
  - Restart uwsgi app service

- name: Install uwsgi app service
  template:
    src: templates/uwsgi-app.service.j2
    dest: "/etc/systemd/system/{{ server_name }}.service"
  register: installed_service
  notify:
  - Restart uwsgi app service

- name: Tell systemd to reload configs
  systemd: daemon_reload=yes
  when: installed_socket is changed or installed_service is changed

- name: Copy uwsgi config
  template:
    src: templates/uwsgi.ini.j2
    dest: "{{ uwsgi_conf_dir }}{{ server_name }}.ini"
    owner: www-data
    group: www-data
  notify:
  - Restart uwsgi app service

- name: Copy nginx config
  template:
    src: templates/nginx.conf.j2
    dest: "{{ nginx_conf_dir }}{{ server_name }}.conf"
  notify:
  - Restart nginx

- name: Ensure uwsgi app socket is running
  systemd:
    name: "{{ server_name }}.socket"
    enabled: yes
    state: started

- name: Ensure uwsgi app service is enabled
  systemd:
    name: "{{ server_name }}.service"
    enabled: yes

- name: Ensure nginx is running
  systemd:
    name: nginx.service
    enabled: yes
    state: started
