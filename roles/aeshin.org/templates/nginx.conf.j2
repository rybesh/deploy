# the upstream component nginx needs to connect to
upstream django {
    server unix:///var/run/uwsgi/{{ server_name }}.socket;
}

server {
    return 404;
}

server {
    listen      80;
    listen      [::]:80;
    server_name {{ server_name }};

    return 301  https://$host$request_uri;
}

server {
    listen      80;
    listen      [::]:80;
    server_name www.{{ server_name }};

    return 301  https://{{ server_name }}$request_uri;
}

server {
    listen      443 ssl http2;
    listen      [::]:443 ssl http2;
    server_name {{ server_name }};

    ssl_certificate     {{ https_chain }};
    ssl_certificate_key {{ https_key }};
    ssl_dhparam         {{ https_dhparams }};

    ssl_session_timeout 1d;
    ssl_session_cache   shared:SSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    charset             utf-8;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    if ($host !~* ^{{ server_name }}$ ) {
        return 444;
    }

    location /media/  {
        internal;
        alias {{ www_root }}/media/;
    }

    location /static/ {
        alias {{ www_root }}/static/;
    }

    location /activities/ {
        alias {{ www_root }}/activities/;
    }

    location / {
        uwsgi_pass  django;
        include  /etc/nginx/uwsgi_params;
    }
}
